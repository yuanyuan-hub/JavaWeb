/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode buildTree(int[] preorder, int[] inorder) {
        TreeNode root = new TreeNode(preorder[0]);
        int index = 0;
        for(int i = 0; i < inorder.length; i ++) {
            if(inorder[i] == preorder[0]) {
                index  = i;
                break;
            }
        }
        if(index != 0) {
            root.left = buildTree(Arrays.copyOfRange(preorder,1,index+1),Arrays.copyOfRange(inorder,0,index));
        }
        if(index != inorder.length - 1){
            root.right = buildTree(Arrays.copyOfRange(preorder,index+1,inorder.length),Arrays.copyOfRange(inorder,index+1,inorder.length));
        }
        return root;
    }
}
